package Lista5;

import ExeptionsPersonalizadas.FilaCheiaException;
import ExeptionsPersonalizadas.FilaVaziaException;

public class FilaVetor <T>{

    private Object info[];
    private int limite;
    private int tamanho;
    private int inicio;

    public FilaVetor(int limite){
        //int info [] = new int [limite];
        this.limite = limite;
        //this.tamanho = 0;
        //this.inicio = 0;
        liberar();
    }

    public void inserir(T valor){
        if(tamanho == limite ){
            throw new FilaCheiaException();
        }
        int posicaoInserir = (inicio + tamanho)% limite;
        info [posicaoInserir] = valor;
        tamanho += 1;
    }

    public boolean estaVazia(){
        return this.tamanho==0;
    }

    @SuppressWarnings("unchecked")
    public T peek(){
        if(estaVazia()){
            throw new FilaVaziaException();
        }
        return (T) info[inicio];
    }

    public T retirar(){
        T valor = peek();
        inicio = (inicio + 1) % limite;
        tamanho += 1;
        return valor;
    }

    public void liberar(){
        while (!estaVazia()) {
            retirar();//Vai removendo os itens at√© ficar vazia a pilha toda
        }
    } 

    @SuppressWarnings({ "unchecked", "rawtypes" })
    public FilaVetor<T> criarFilaConcatenada(FilaVetor f2){
        //FilaVetor<T> f3 = f1.criarFilaConcatenada(f2);
        FilaVetor<T> f3 = new FilaVetor<T>(this.limite + f2.limite);

        for(int i = 0; i<tamanho; i++){
            int indice = (inicio + i) % limite;
            f3.inserir((T) f2.info[indice]);
        }

        for(int i = 0; i<tamanho; i++){
            int indice = (f2.inicio + i) % f2.limite;
            f3.inserir((T) f2.info[indice]);
        }
        return f3;
    }

    @Override
    public String toString(){
        String dados = " ";
        if(estaVazia()){
            throw new FilaVaziaException();
        }

        for(int i=0; i < tamanho; i++){
            int indice = (inicio + i) % limite;
            dados += "[" + info [indice] + "]";
        }
       return dados;
    }

    public int getLimite(){
        return limite;
    }
}
